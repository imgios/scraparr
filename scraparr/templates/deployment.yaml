apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scraparr.fullname" . }}
  labels:
    {{- include "scraparr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "scraparr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "scraparr.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if and .Values.config (or .Values.config.radarr .Values.config.sonarr .Values.config.prowlarr) }}
      initContainers:
      {{- range $key, $values := $.Values.config }}
      {{- if regexMatch "radarr|sonarr|prowlarr$" $key }}
      {{- $arrInfo := get $.Values.config $key }}
      {{- range $service := $values }}
        - name: wait-for-{{ $service.alias }}
          image: busybox:1.37.0
          command: [
            "sh",
            "-c",
            "for i in $(seq 120); do if (wget --spider -S -T 10 \"{{ $service.url }}\" 2>&1 | grep -qw '200\|301\|302' > /dev/null) ; then exit 0; fi; echo [$i] Waiting for {{ $service.alias }}; sleep 10; done; echo Timed out waiting for {{ $service.alias }}; exit 1"
          ]
      {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe  }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/scraparr/config"
              name: config
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: scraparr-config
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
